<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="edit-vault">
	<title>Editing the vault</title>
	<body>
		<p>Once your group variables file is ready, the next step is to create a vault file to match
			your environment. The vault file is essentially the same thing than the group variables
			but it will contain all sensitive variables and will be encrypted.</p>
		<p>There is a sample vault file named <codeph>group_vars/vault.sample</codeph> that you can
			use as a model for your vault file. To create a vault, you create a new file
				<codeph>group_vars/vault</codeph> and add entries similar to:</p>

					<codeblock>---
vcenter_password: 'xxx' 
docker_ee_url: 'yoururl'
vm_password: 'xxx'
ucp_password: 'xxx'
rhn_orgid: 'Red Hat Organization ID'
rhn_key: 'Red Hat Activation Key'</codeblock>
				
		<p><codeph>rhn_orgid</codeph> and <codeph>rhn_key</codeph> are the credentials needed to
			subscribe the virtual machines with Red Hat Customer Portal. For more info regarding
			activation keys see the following URL: <xref format="html" scope="external"
				href="https://access.redhat.com/articles/1378093"
				>https://access.redhat.com/articles/1378093</xref></p>
		<p>To encrypt the vault you need to run the following command:</p>

					<codeblock># ansible-vault encrypt group_vars/vault</codeblock>
				
		<p>You will be prompted for a password that will decrypt the vault when required. You can
			update the values in your vault by running:</p>

					<codeblock># ansible-vault edit group_vars/vault</codeblock>
				
		<p>For Ansible to be able to read the vault, you need to specify a file where the password
			is stored, for instance in a file called <codeph>.vault_pass</codeph>. Once the file is
			created, take the following precautions to avoid illegitimate access to this file:</p>
		<ol>
			<li> Change the permissions so only <codeph>root</codeph> can read it using <codeph>#
					chmod 600 .vault_pass</codeph>
			</li>
			<li> Add the file to your <codeph>.gitignore</codeph> file if you're pushing the set of
				playbooks to a git repository. </li>
		</ol>
		<p/>
	</body>
	
	<!--<topic id="d1e3984">
		<title>
			<b>Windows playbooks configuration</b>
		</title>
		<body>
			<p>The Windows playbooks use a special encrypted file called <codeph>win_worker.yml</codeph> that is used by the folowing playbooks:</p>

			<ul>
				<li>create_windows_vms.yml</li>
				<li>install_docker_window.yml</li>
				<li>scale_workers_windows.yml</li>
			</ul>
			
			<p>Description:</p>
			<ul>
				<li>these are used by win remote management module winRM, ansible communicates over
					port 5986 to remote windows virtual machines.</li>
			</ul>
			<p>Example:</p>
			<ul>
				<li>ansible_user: Administrator</li>
				<li>ansible_password: "{Enter Password here}"</li>
				<li>ansible_port: 5986</li>
				<li>ansible_connection: winrm</li>
				<li>ansible_winrm_server_cert_validation: ignore</li>
				<li>ansible_winrm_operation_timeout_sec: 250</li>
				<li>ansible_winrm_read_timeout_sec: 300</li>
				<li>windows_timezone: 15</li>
			</ul>
			<p/>
		</body>
	</topic>-->
	
	
</topic>
