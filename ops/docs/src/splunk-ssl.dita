<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="splunk-ssl">
<title>Enabling SSL between the universal forwarders and the Splunk indexers using your
certificates</title>
<body>
    
<section>
<title>Summary</title>

<ol>
<li>Set the variable <codeph>splunk_ssl</codeph> to <codeph>yes</codeph> in <codeph>group_vars/vars</codeph></li>
  
<li>Put your root CA certificate and your server certificate files in
<codeph>/root/Docker-Synergy/ops/files/splunk/linux/SPLUNK_HOME/etc/mycerts</codeph></li>
  
<li>Uncomment the <codeph>[sslConfig]</codeph> stanza in the file 
<codeph>/files/splunk/linux/SPLUNK_HOME/etc/system/local/server.conf</codeph>

</li>
</ol>

</section>    
    
    
<section>
    
<title>Limitations</title>

SSL only works with Linux worker nodes. The Universal Forwarders verify that the indexers they connect to have a certificate signed
by the configured root CA and that the Common Name in the certificate presented by the
indexer matches its FQDN as listed by the variable
<codeph>splunk_architecture_forward_servers</codeph>.

</section>

<section>
<title>Prerequisites</title>
    
<p>Configure your indexers to use SSL on port 9998. The following is an example <codeph>inputs.conf</codeph>
file located in <codeph>$SPLUNK_HOME/etc/system/local</codeph> that enables SSL on port 9998 and configures
the certificate file for use by the indexer itself, in this instance <codeph>/opt/splunk/etc/mycerts/indexer.pem</codeph>. </p>
    
<codeblock>[splunktcp-ssl://9998]
disabled=0
connection_host = ip

[SSL]
serverCert=/opt/splunk/etc/mycerts/indexer.pem
#requireClientCert = true
#sslAltNameToCheck = forwarder,forwarder.cloudra.local

[tcp://1514]
connection_host = dns
sourcetype = ucp
</codeblock>


<p>For more information, see the documentation at 
<xref href="https://docs.splunk.com/Documentation/Splunk/7.0.2/Security/ConfigureSplunkforwardingtousesignedcertificates" format="html"/>.
In addition, you can see how to create your own certificates and
the content of the file designated with <codeph>serverCert</codeph> at 
<xref href="http://docs.splunk.com/Documentation/Splunk/7.0.2/Security/Howtoself-signcertificates" format="html"/>. 
</p>
<p>In this instance, the folder <codeph>mycerts</codeph> was
created under <codeph>/opt/splunk/etc</codeph> and the file <codeph>indexer.pem</codeph>  was copied to this folder.</p>
    
    
    
<p>Indexers are configured with the Root CA cert used to signed all certificates. This can
be done by editing the file <codeph>server.conf</codeph> in <codeph>$SPLUNK_HOME/etc/system/local</codeph> on your
indexer(s). The following code block shows the relevant portion of this file where
<codeph>sssRootCaPath</codeph> is pointing to the root CA certificate. 
</p>

<codeblock>[sslConfig]
sslRootCAPath = /opt/splunk/etc/mycerts/ca.pem</codeblock>
    
<note type="note">In order to be able to download and install additional applications, you
may want to append the file <codeph>$SPLUNK_HOME/auth/appsCA.pem</codeph> to your <codeph>ca.pem</codeph> file. If you
don't do this, the Splunk UI will make this suggestion when you attempt to <codeph>Find more
apps</codeph>. </note>
 
    
<p>Splunk should be restarted on the indexers if you had to make these changes (see the
Splunk documentation for more information).</p>


</section>

<section>
<title>Before you deploy</title>

<p>Generate the forwarder certificate and  name it <codeph>forwarder.pem</codeph>. Make sure that you
copy the root CA certificate to <codeph>ca.pem</codeph></p>
    
<p>Copy <codeph>ca.pem</codeph> and <codeph>forwarder.pem</codeph> to <codeph>files/splunk/linux/SPLUNK_HOME/etc/mycerts/</codeph>
(overwriting any existing files)</p>
    
<p>Edit the file server.conf under files/splunk/linux/SPLUNK_HOME/etc/system/local and
uncomment the last two lines as suggested in the file itself. Your file should look like
this:
</p>

<codeblock>#
# uncomment the section below if you want to enable SSL
#
[sslConfig]
sslRootCAPath = /opt/splunkforwarder/etc/mycerts/ca.pem</codeblock>
    
    
<p>Set <codeph>splunk_ssl</codeph> to <codeph>yes</codeph> in the file <codeph>group_vars/vars</codeph>, uncommenting the line if required.
  Make sure that the <codeph>splunk_architecture_forward_servers</codeph> list specifies all your indexers together with the
port that was configured to accept SSL:</p>
    
<codeblock>monitoring_stack: splunk
splunk_ssl: yes
splunk_architecture_forward_servers:
- indexer1.cloudra.local:9998
- indexer2.cloudra.local:9998</codeblock>

</section>



<section>
<title>Hybrid environment Linux/ Windows</title>
<p>Currently, you cannot deploy your own certificates for use by the Universal Forwarders
deployed on Windows machines. If you want to have your linux machines use SSL proceed as
indicated below</p>
<ol>
<li>Comment out the <codeph>splunk_architecture_forward_servers</codeph> (and its values)
from group_vars/vars
<codeblock>monitoring_stack: splunk
splunk_ssl: yes
#splunk_architecture_forward_servers:
#  - clh2-ansible.cloudra.local:9998</codeblock>
</li>
<li>create a file named vms.yml in the folder group_vars and specify the list of forward
servers to use by the linux servers. This list is typically the same as the one used for
windows servers but specifies a TCP port that enables SSL.
<codeblock>splunk_architecture_forward_servers:
- clh2-ansible.cloudra.local:9998</codeblock>
</li>
<li>edit the group_vars/win_worker.yml file and specify the list of forward servers to use by the windows servers.This list is typically the same as the one used for linux servers  but specifies a TCP port that does not enable SSL.
<codeblock>splunk_architecture_forward_servers:
- clh2-ansible.cloudra.local:9997</codeblock>
</li>

</ol>
</section>

</body>
</topic>
