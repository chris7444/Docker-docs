<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="monitoring-config-splunk">
<title>Splunk configuration</title>
<body>
<section>
<title>Deployment types and options</title>
<p> There are two deployment types called 'splunk' and 'splunk_demo'. The 'splunk' deployment
option (also called 'splunk' stack sometimes) is the production deployment where we expect
to configure the universal forwarders with external "forward servers" (splunk indexers). The
'splunk_demo' deployment is for demo purposes only and deploys a splunk enterprise instance
as a stack and configures all the universal forwarders to forward the data they collect to
this splunk enterprise instance. The splunk UI can be reached at htttp://&lt;fqdn>:8000,
where &lt;fqdn> is the fqdn of one of your linux docker node (mesh routing is not working on
Windows at this point in time).</p>
<p>The variable monitoring_stack in group_vars/vars is used to specify the type of deployment
you want. The following setting will tell the playbooks to chose the 'splunk_demo'
deployment</p>
<codeblock>monitoring_stack: splunk_demo</codeblock>
<p>If chosing the 'splunk' deployment, the following variables (in group_vars/vars) are also
used: splunk_architecture_forward_servers and splunk_ssl.</p>
<ul>
<li><p><b>splunk_architecture_forward_servers</b></p>
<p> a list of splunk indexers the universal forwarders should send the data to. In the
example below, the universal forwarders will be configured to send the data to two
indexers. Note that the indexerx are configured in a single load balancing group. </p>
<codeblock>
splunk_architecture_forward_servers:
- splunk-indexer1.cloudra.local:9997
- splunk-indexer2.cloudra.local:9997
</codeblock>
<p>By default, the indexers are configured in a single load balancing group. This can be
changed by editing the file outputs.conf.j2 in the folder template/monitoring/splunk/.
but make sure you understand what you are doing. More information regarding this
forwarding with Universal Forwader can be found here
http://docs.splunk.com/Documentation/Forwarder/7.0.2/Forwarder/Configureforwardingwithoutputs.conf.</p>
<note type="note">The playbooks ignore this variable when the chosen deployment type is
'splunk_demo'. The Universal forwarder will be configured to send the data they collect
to the splunk enterprise instance deployed by the playbooks.</note>
</li>
<li><p><b>splunk_ssl</b></p>
<p>If defined, this will enable SSL authentication between the universal forwarders and
the indexers. If you don't want SSL, do not define this variable (comment out the
corresponding line). The 'splunk_demo' deployment ignores this variable (and will not
enable SSL between the universal forwarders and the splunk enterprise instance deployed
by the playbooks)</p>
</li>
</ul>
</section>
<section>
<title>Before you deploy</title>
<ol>
<li>Select the splunk deployment type and specify the variable
<codeph>monitoring_stack</codeph> in group_vars/vars</li>
<li>If you choose 'splunk', specify the list of indexers using the variable
<codeph>splunk_architecture_forward_servers </codeph>in group_vars/vars</li>
<li>if you choose 'splunk and if you want to use your own certificates to secure the
communications between the indexers and the universal forwaders <ol>
<li>define the variable splunk_ssl in group_vars/vars</li>
<li>put your root CA certificate and your server certificate files in
/root/Docker-Synergy/ops/files/splunk/linux/SPLUNK_HOME/etc/mycerts. For more
information, refer to the section discussing SSL later in this document. </li>
<li>edit the file server.conf in /files/splunk/linux/SPLUNK_HOME/etc/system/local.
Uncomment the [sslConfig] stanza and its content
<codeblock>
[sslConfig]
sslRootCAPath = /opt/splunkforwarder/etc/mycerts/ca.pem
</codeblock>
</li>

</ol>
</li>
<li>Copy the Splunk Universal forwarder packages. The solution currently supports the Linux
64-bit and the Windows 8.1/Windows 10 64-bit forwarders. <ol>
<li>Open https://www.splunk.com/en_us/download/universal-forwarder.html</li>
<li>Download the MSI package for Windows 64 bit and store it in
files/splunk/windows</li>
<li>Download the RPM package for Linux 64-bit (2.6+ kernel Linux distributions) and
store it in files/splunk/linux <note> Both images/packages must be at the same
version, and have the same name, but they should keep their respective extension,
.rpm for linux .msi for windows. For example you will have the following files <ul>
<li>files/splunk/windows/splunkforwarder-7.0.2.msi</li>
<li>files/splunk/linux/splunkforwarder-7.0.2.rpm</li>
</ul>
</note>
</li>
<li>Edit the vars.yml files located in
<codeph>templates\monitoring\&lt;monitoring_stack></codeph>, where
<codeph>&lt;monitoring_stack></codeph> is <b>splunk</b> or <b>splunk_demo</b> and
set the variable <codeph>splunk_architecture_universal_forwarder_package</codeph> to
the name you selected for the package(s), not including the file extension.
<codeblock>
splunk_architecture_universal_forwarder_package: 'splunkforwarder-7.0.2'
</codeblock>
</li>
</ol>
</li>
<li>Optionnally (advanced), make adjustements in the following folder hierarchies. The files
located here will be copied as-is to the systems running the universal forwarder <ul>
<li>files/splunk/linux/SPLUNK_HOME</li>
<li>files/splunk/linux/DOCKER_TAS</li>
<li>files/splunk/windows/SPLUNK_HOME</li>
</ul>
</li>

</ol>
</section>
</body>
</topic>
