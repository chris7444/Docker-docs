<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="solution-config">
<title>Solution configuration</title>
<body>
<p>The Ansible playbooks are available to download at 
<xref href="https://github.com/HewlettPackard/Docker-Synergy" format="html" scope="external"/>. 
By default, the  playbooks  are configured as shown in <xref href="solution-config.dita#solution-config/architecture-3node" type="fig"/> to set up a 3 node environment. This is the 
minimal starter configuration recommended by HPE and Docker for 
production. 
</p>
    
<fig id="architecture-3node">
<title>Three node HPE Synergy Configuration</title>
<image href="media/architecture-3node.png" placement="break"/>
</fig>  
    
<p>
The playbooks can also be used for larger container environments, with a 3 frame, 6 node HPE Synergy system, 
with 2 nodes in each frame  as shown in <xref href="solution-config.dita#solution-config/architecture-6node" type="fig"/>. 
</p>

<fig id="architecture-6node">
<title>Six node HPE Synergy Configuration</title>
<image href="media/architecture-6node.png" placement="break"/>
</fig>  

<p>Two separate configurations are available out of the box, with one restricted to a Linux-only deployment while the other
supports a hybrid deployment including Windows workers as well as Linux ones. 
All the software is distributed over the physical nodes via VMware virtual machines (VMs), 
depending on the size of your environment, as follows:</p>
    
<section>
<title>Linux-only VM configuration</title>    

<ul>
<li>3 Docker Universal Control Plane (UCP) VM nodes for HA and cluster management </li>
<li>3 Docker Trusted Registry (DTR) VM nodes for HA of the container registry </li>
</ul>

<p>The Docker UCP and DTR nodes are spread across 3 physical nodes, with one on each physical node. An odd number of manager nodes is
recommended to avoid split-brain issues. It is possible to restrict the deployment to 1 UCP and 1 DTR, or to expand to more than 3, but the recommended minimum for 
an enterprise production deployment is 3 UCPs and 3 DTRs.
</p>

<ul>  
<li>3 Docker swarm Linux worker VM nodes for container workloads </li>
</ul>

<p>The Docker worker nodes will be co-located with the UCP and DTR nodes in a 3 physical node deployment, 
whereas in a 6 physical node set-up, the worker nodes will typically be separated onto the extra nodes. 
It is possible to specify that more than one worker node will be deployed per physical node but 
this decision will depend on the requirements of your applications.</p>

<ul>  
<li>1 Docker UCP load balancer VM to ensure access to UCP in the event of a node
failure </li>
<li>1 Docker DTR load balancer VM to ensure access to DTR in the event of a node
failure </li>
<li>1 Docker swarm worker node VM load balancer </li>
</ul>

<p>Three load balancers are provided to increase availability of the UCP, DTR and worker nodes and these are typically
distributed evenly across 3 physical nodes.</p>

<ul>  
<li>1 Logging server VM for central logging </li>
<li>1 NFS server VM for storage of Docker DTR images </li>
</ul>

<p>With the addition of the NFS and logging VMs, a total of 14 VMs are created for the default Linux-only deployment.  In addition to these VMs, the playbooks also set up the Docker persistent storage plug-in from VMware.  
The vSphere Docker volume plug-in  facilitates the storage of data in a shared datastore that can be accessed from any machine in the cluster.</p>

</section>

<section>
<title>Hybrid VM configuration (Windows and Linux)</title>    
    
<ul>
<li>3 Docker swarm Windows worker VM nodes for container workloads (optional) </li>     
</ul>
   
<p>The hybrid deployment will typically add 3 Windows worker nodes to thie above configuration, co-located with the Linux workers.  </p>   

<note type="note">
Some of the application 
    software supported by this configuration does not currently run on Windows, for example, the Sysdig Software Agent (see the 
    section <xref href="sysdig.dita"/>.    
</note>
    
</section>
</body>
</topic>
