<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="k8s-nfs-provisioner-3par">
<title>Using 3PAR for post-deployment verification</title>
<body>
    
<section>
<title>Setting up 3PAR</title>  

<p>The following section outlines the steps you need to follow in order to configure a Virtual File Server 
  and a share for use by the Kubernetes NFS provisioner.</p>


<p>Create a virtual file server (VFS):</p>
<ol>
<li>In the General section, as shown in <xref href="k8s-nfs-provisioner-3par.dita#k8s-nfs-provisioner-3par/vfs-general" type="fig"/>, specify a name, in this instance <codeph>gab_vfs3par</codeph>

<fig id="vfs-general">
<title>Create Virtual File Server - General</title>
<image href="media/3par-create-vfs.png" placement="break"/>
</fig>  
  
</li> 
  
<li>In the Storage Allocation Settings section, as shown in <xref href="k8s-nfs-provisioner-3par.dita#k8s-nfs-provisioner-3par/vfs-storage" type="fig"/>, set the Provisioning to <codeph>Thin Provisioned</codeph>, 
select an appropriate CPG, in this instance <codeph>FC_r1</codeph>, and set the size, for example, 1 terabyte.

<fig id="vfs-storage">
<title>Create Virtual File Server - Storage Allocation Settings</title>
<image href="media/3par-create-vfs-storage.png" placement="break"/>
</fig>    
</li>  

<li>
Add a virtual IP address as shown in  <xref href="k8s-nfs-provisioner-3par.dita#k8s-nfs-provisioner-3par/vfs-vip" type="fig"/>.

<fig id="vfs-vip">
<title>Create Virtual File Server - Add Virtual IP Address </title>
<image href="media/3par-create-vfs-vip.png" placement="break"/>
</fig>  
</li>
  
  
</ol>


<p>
These steps  result in a Virtual File Server  shown in <xref href="k8s-nfs-provisioner-3par.dita#k8s-nfs-provisioner-3par/vfs" type="fig"/>.
</p>  
<fig id="vfs">
<title>Virtual File Server</title>
<image href="media/3par-vfs.png" placement="break"/>
</fig> 


 

<p>Create a File Store:</p>

<ol>
<li>
In the General section, as shown in <xref href="k8s-nfs-provisioner-3par.dita#k8s-nfs-provisioner-3par/create-filestore" type="fig"/>, 
  specify a name, in this instance <codeph>gab_filestore3par</codeph>, and select the Virtual File Server that you just created.
  
<fig id="create-filestore">
<title>Create File Store - General</title>
<image href="media/3par-create-filestore.png" placement="break"/>
</fig>   
  
</li>  
<li>
Use the default Security settings, as shown in <xref href="k8s-nfs-provisioner-3par.dita#k8s-nfs-provisioner-3par/create-filestore-security" type="fig"/>.
  
<fig id="create-filestore-security">
<title>Create File Store - Security</title>
<image href="media/3par-create-filestore-security.png" placement="break"/>
</fig>     
</li>  

</ol>
  
  
<p>
These steps result in the File Store shown in <xref href="k8s-nfs-provisioner-3par.dita#k8s-nfs-provisioner-3par/filestore" type="fig"/>.
</p>

<fig id="filestore">
<title>File Store</title>
<image href="media/3par-create-filestore-complete.png" placement="break"/>
</fig>  

  
 


<p>Create a File Share:</p>
  
<ol>
<li>
  
In the General section of the Create File Share dialog, 
shown <xref href="k8s-nfs-provisioner-3par.dita#k8s-nfs-provisioner-3par/create-fileshare" type="fig"/>, 
  set the share type to NFS Share and set a share name, for example, <codeph>gab_fileshare3par</codeph>  
  
<fig id="create-fileshare">
<title>Create File Share - General</title>
<image href="media/3par-create-fileshare.png" placement="break"/>
</fig>    
  
</li>


<li>
In the Share Path section, select the virtual file server and file store that you created earlier, as shown in <xref href="k8s-nfs-provisioner-3par.dita#k8s-nfs-provisioner-3par/create-fileshare-sharepath" type="fig"/>  
  
  
<fig id="create-fileshare-sharepath">
<title>Create File Share - Share Path</title>
<image href="media/3par-create-fileshare-sharepath.png" placement="break"/>
</fig>     
</li>
  
<li>
In the Additional Settings section, set the Permission to <codeph>Read/Write allowed</codeph>  and the Privilege to 
  <codeph>root squashing is off (no root squash)</codeph> as shown in 
  <xref href="k8s-nfs-provisioner-3par.dita#k8s-nfs-provisioner-3par/create-fileshare-additional" type="fig"/>


<fig id="create-fileshare-additional">
<title>Create File Share - Share Path</title>
<image href="media/3par-create-fileshare-additional.png" placement="break"/>
</fig>   

</li>  
</ol>  
  
<p>The overview for File Share is shown below in 
<xref href="k8s-nfs-provisioner-3par.dita#k8s-nfs-provisioner-3par/create-fileshare-complete" type="fig"/>
  and contains the information you need to specify the configuration variables.
</p>  

<fig id="create-fileshare-complete">
<title>Create File Share - Share Path</title>
<image href="media/3par-create-fileshare-complete.png" placement="break"/>
</fig>     


</section>


<section>
<title>Configuration</title>
<p>In the following example, it is assumed that the relevant variables are configured as follows:</p> 
  
<table id="k8s-persistent-volume-verify" frame="none">
<title>Configuration values</title>
<tgroup cols="2">
<colspec colnum="1" colname="c1" align="left"/>
<colspec colnum="2" colname="c2" align="left"/>
<thead>
<row>
<entry>Variable</entry>
<entry>Value</entry>
</row>
</thead>
<tbody>

<row>
<entry>nfs_provisioner_role</entry>
<entry><codeph>nfs-provisioner-runner-3par</codeph></entry>
</row>     

 
<row>
<entry>nfs_provisioner_name</entry> 
<entry><codeph>hpe.com/nfs-3par</codeph></entry>
</row>
 
<row>
<entry>nfs_provisioner_storage_class_name</entry> 
<entry><codeph><b>nfs-3par</b></codeph></entry>
</row>

<row>
<entry>nfs_provisioner_server_ip</entry> 
<entry><codeph>10.60.59.102</codeph></entry>
</row>

<row>
<entry>nfs_provisioner_server_share</entry> 
<entry><codeph>/gab_vfs3par/gab_vfs3par/gab_filestore3par/gab_fileshare3par</codeph></entry>
</row>

  
</tbody>
</tgroup>
</table>  
</section> 
    
<section>
<title>Verification</title>  
  
<p>Ensure that your environment satisfies the prerequisites as described in <xref href="k8s-nfs-provisioner.dita"/> and then run the playbook:</p>  

<codeblock># cd Docker-Synergy/ops
# ansible-playbook -i vm_hosts playbooks/k8s-nfs-provisioner.yml --vault-password-file .vault_pass
</codeblock> 


<p>Running the command <codeph>kubectl get sc</codeph> will show the storage class named <codeph>nfs</codeph>:</p>

<codeblock>
# kubectl get sc
NAME      PROVISIONER        AGE
nfs-3par  hpe.com/nfs-3par   5m
</codeblock>
  

<p>Create a temporary file <codeph>/tmp/pvc-3par.yml</codeph> for a persistent volume claim (PVC) named <codeph>nfs-3par-test</codeph>
with a storage class of <codeph>nfs-3par</codeph>
</p>
<codeblock># cat /tmp/pvc.yml &lt;&lt;EOF
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: <b>nfs-3par-test</b>
  annotations:
    volume.beta.kubernetes.io/storage-class: "<b>nfs-3par</b>"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
EOF  
</codeblock>


<p>Create the PVC resource by running <codeph>kubectl apply</codeph> on this file.</p>

<codeblock># kubectl apply -f /tmp/pvc-3par.yml
persistentvolumeclaim "nfs-3par-test" created</codeblock>
  
<p>Verify that the corresponding persistent volume (PV) was created at the same time.</p>  
  
<codeblock># kubectl get pv
NAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS    CLAIM                   STORAGECLASS   REASON    AGE
pvc-5dd91d9b-a520-11e8-975d-0242ac110010   100Mi      RWX            Delete           Bound     default/nfs-3par-test   nfs-3par                 58s
</codeblock>   
  
<p>Define a pod that will mount the persistent volume through using the persistent volume claim. The persistent volume
  is mounted under <codeph>/tmp/foo</codeph>.</p>
  
<codeblock>cat /tmp/pod.yml &lt;&lt;EOF
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: <b>nfs-3par-pod</b>
spec:
  selector:
    matchLabels:
      app: nfs-3par-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: nfs-3par-pod
    spec:
      volumes:
      - name: pod-data
        persistentVolumeClaim:
          claimName: <b>nfs-3par-test</b>
      containers:
      - name: nfs-3par-pod
        command:
        - sh
        - -c
        - while true; do sleep 1; done
        image: radial/busyboxplus:curl
        volumeMounts:
        - mountPath: <b>/tmp/foo</b>
          name: pod-data
EOF</codeblock>  
  
<p>Create the pod resource by running <codeph>kubectl apply</codeph> on the file.</p>  
  
  
<codeblock># kubectl apply -f /tmp/pod-3par.yml
deployment.apps "nfs-3par-pod" created
</codeblock>  


<p>Retrieve the pod ID  and then execute a command in the pod to create a test file on the persistent volume. The file is named <codeph>/tmp/foo/bar.txt</codeph> 
 and contains the string <codeph>hello</codeph>.</p>

<codeblock># pod=$(kubectl get pod | awk '/nfs-3par-pod-/ {print $1}')
# kubectl exec -it $pod -- sh -c "<b>echo hello >/tmp/foo/bar.txt</b>"</codeblock>

<p>Check that the file was written correctly:</p>
  
<codeblock># kubectl exec -it $pod -- sh -c "cat /tmp/foo/bar.txt"
hello
</codeblock>  
  
<p>Now delete the deployment associated with the pod.</p>  
  
<codeblock># kubectl get deploy nfs-3par-pod
NAME           DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
nfs-3par-pod   1         1         1            1           28m

# kubectl delete deploy nfs-3par-pod
deployment.extensions "nfs-3par-pod" deleted
</codeblock>

<p>Wait until the status is no longer <codeph>Terminating</codeph> and the pod is deleted.</p>
  
<codeblock>kubectl get pod
NAME                               READY     STATUS        RESTARTS   AGE
nfs-3par-pod-5c4896699d-zfq9n      1/1       <b>Terminating</b>   0          28m
</codeblock>  


<p>Re-create the pod as before, by running <codeph>kubectl apply</codeph> on the file <codeph>/tmp/pod-3par.yml</codeph>.</p>
  
<codeblock># kubectl apply -f /tmp/pod-3par.yml
deployment.apps "nfs-3par-pod" created
</codeblock>  

<p>Retrieve the pod id:</p>

<codeblock># pod=$(kubectl get pod | awk '/nfs-3par-pod-/ {print $1} ')

# echo $pod
nfs-3par-pod-5c4896699d-kl6bw

# kubectl get pod
NAME                               READY     STATUS    RESTARTS   AGE
nfs-3par-pod-5c4896699d-kl6bw      1/1       Running   0          38s
</codeblock>
  
<p>Connect to the new pod, and retrieve the contents of the file you created previously.</p>  
  
<codeblock># kubectl exec -it $pod -- sh -c "cat /tmp/foo/bar.txt"
<b>hello</b>
</codeblock>  
  
</section>

</body>
</topic>
